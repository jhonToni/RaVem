<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\ravem.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\ravem.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Sat Aug 24 23:17:37 2013
<BR><P>
<H3>Maximum Stack Usage =        588 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; decodeVM &rArr; getField &rArr; seekNameAndType_desc &rArr; seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[10]">BOD_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">BOD_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">BOD_IRQHandler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[e]">CMP_IRQHandler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[b]">I2C_IRQHandler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[d]">MRT_IRQHandler</a> from lpc8xx_mrt.o(i.MRT_IRQHandler) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[12]">PININT0_IRQHandler</a> from lpc8xx_gpio.o(i.PININT0_IRQHandler) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[13]">PININT1_IRQHandler</a> from lpc8xx_gpio.o(i.PININT1_IRQHandler) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[14]">PININT2_IRQHandler</a> from lpc8xx_gpio.o(i.PININT2_IRQHandler) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[15]">PININT3_IRQHandler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[16]">PININT4_IRQHandler</a> from lpc8xx_gpio.o(i.PININT4_IRQHandler) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[17]">PININT5_IRQHandler</a> from lpc8xx_gpio.o(i.PININT5_IRQHandler) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[18]">PININT6_IRQHandler</a> from lpc8xx_gpio.o(i.PININT6_IRQHandler) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[19]">PININT7_IRQHandler</a> from lpc8xx_gpio.o(i.PININT7_IRQHandler) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[c]">SCT_IRQHandler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[6]">SPI0_IRQHandler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[7]">SPI1_IRQHandler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from device_depend.o(i.SysTick_Handler) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[1b]">SystemInit</a> from system_lpc8xx.o(i.SystemInit) referenced from startup_lpc8xx.o(.text)
 <LI><a href="#[8]">UART0_IRQHandler</a> from lpc8xx_uart.o(i.UART0_IRQHandler) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[9]">UART1_IRQHandler</a> from lpc8xx_uart.o(i.UART1_IRQHandler) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[a]">UART2_IRQHandler</a> from lpc8xx_uart.o(i.UART2_IRQHandler) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[f]">WDT_IRQHandler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[11]">WKT_IRQHandler</a> from startup_lpc8xx.o(.text) referenced from startup_lpc8xx.o(RESET)
 <LI><a href="#[1c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc8xx.o(.text)
 <LI><a href="#[1d]">_sputc</a> from printf3.o(i._sputc) referenced from printf3.o(i.__0sprintf$3)
 <LI><a href="#[1a]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[20]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[54]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[55]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[56]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[57]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[58]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOD_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PININT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SCT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>WKT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc8xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_systick
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getConstantPoolInfo
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_seek
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setStackFromConstantPool
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setIntegerToStack
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekNameAndType_name
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekNameAndType_desc
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekConstClassNumString
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putField
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokevirtual_callFunction
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokestatic_callFunction
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokespecial_callFunction
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getStringFromOperandStack
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getField
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getConstantPoolInfo
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeStackType
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekCodeArrtibute
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pool_realloc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIntegerFromOperandStack
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print
</UL>

<P><STRONG><a name="[3c]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putField
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokevirtual_callFunction
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokestatic_callFunction
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokespecial_callFunction
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getField
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekCodeArrtibute
</UL>

<P><STRONG><a name="[1f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[5b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>GPIOInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lpc8xx_gpio.o(i.GPIOInit))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[4f]"></a>GPIOSetBitValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc8xx_gpio.o(i.GPIOSetBitValue))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_write
</UL>

<P><STRONG><a name="[4e]"></a>GPIOSetDir</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc8xx_gpio.o(i.GPIOSetDir))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_write
</UL>

<P><STRONG><a name="[d]"></a>MRT_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc8xx_mrt.o(i.MRT_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PININT0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, lpc8xx_gpio.o(i.PININT0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PININT0_IRQHandler &rArr; PININT_Handler &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PININT1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, lpc8xx_gpio.o(i.PININT1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PININT1_IRQHandler &rArr; PININT_Handler &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>PININT2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, lpc8xx_gpio.o(i.PININT2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PININT2_IRQHandler &rArr; PININT_Handler &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PININT4_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, lpc8xx_gpio.o(i.PININT4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PININT4_IRQHandler &rArr; PININT_Handler &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PININT5_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, lpc8xx_gpio.o(i.PININT5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PININT5_IRQHandler &rArr; PININT_Handler &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>PININT6_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, lpc8xx_gpio.o(i.PININT6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PININT6_IRQHandler &rArr; PININT_Handler &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>PININT7_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, lpc8xx_gpio.o(i.PININT7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PININT7_IRQHandler &rArr; PININT_Handler &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, device_depend.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UART0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, lpc8xx_uart.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART0_IRQHandler &rArr; UART_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UART1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, lpc8xx_uart.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART1_IRQHandler &rArr; UART_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>UART2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, lpc8xx_uart.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART2_IRQHandler &rArr; UART_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[21]"></a>PININT_Handler</STRONG> (Thumb, 176 bytes, Stack size 20 bytes, lpc8xx_gpio.o(i.PININT_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PININT_Handler &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT7_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT6_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT5_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT4_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT2_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT1_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT0_IRQHandler
</UL>

<P><STRONG><a name="[24]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, system_lpc8xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[1b]"></a>SystemInit</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, system_lpc8xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc8xx.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>UARTClock_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, lpc8xx_uart.o(i.UARTClock_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTClock_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
</UL>

<P><STRONG><a name="[28]"></a>UARTInit</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, lpc8xx_uart.o(i.UARTInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UARTInit &rArr; UARTClock_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTClock_Init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[52]"></a>UARTSend</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lpc8xx_uart.o(i.UARTSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print
</UL>

<P><STRONG><a name="[22]"></a>UART_Handler</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lpc8xx_uart.o(i.UART_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[2a]"></a>__0sprintf$3</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5d]"></a>__1sprintf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)

<P><STRONG><a name="[3d]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokevirtual_callFunction
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getStringFromOperandStack
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getField
</UL>

<P><STRONG><a name="[23]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lpc8xx_gpio.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLengthOfConstantInfo
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getConstantPoolInfo
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PININT_Handler
</UL>

<P><STRONG><a name="[5e]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[5f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[2c]"></a>bc_seek</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ravem.o(i.bc_seek))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bc_seek
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getConstantPoolInfo
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekCodeArrtibute
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
</UL>

<P><STRONG><a name="[2e]"></a>changeStackType</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, ravem.o(i.changeStackType))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = changeStackType
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
</UL>

<P><STRONG><a name="[30]"></a>decodeVM</STRONG> (Thumb, 1026 bytes, Stack size 144 bytes, ravem.o(i.decodeVM))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = decodeVM &rArr; getField &rArr; seekNameAndType_desc &rArr; seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setStackFromConstantPool
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setIntegerToStack
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putField
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokevirtual_callFunction
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokestatic_callFunction
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokespecial_callFunction
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getField
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeStackType
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_seek
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIntegerFromOperandStack
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>getConstantPoolInfo</STRONG> (Thumb, 454 bytes, Stack size 56 bytes, ravem.o(i.getConstantPoolInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLengthOfConstantInfo
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_seek
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekNameAndType_name
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekNameAndType_desc
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekConstClassNumString
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekCodeArrtibute
</UL>

<P><STRONG><a name="[34]"></a>getField</STRONG> (Thumb, 154 bytes, Stack size 168 bytes, ravem.o(i.getField))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = getField &rArr; seekNameAndType_desc &rArr; seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setIntegerToStack
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekNameAndType_desc
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
</UL>

<P><STRONG><a name="[33]"></a>getIntegerFromOperandStack</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, ravem.o(i.getIntegerFromOperandStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = getIntegerFromOperandStack &rArr; seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekConstClassNumString
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putField
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokestatic_callFunction
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>getLengthOfConstantInfo</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, ravem.o(i.getLengthOfConstantInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getConstantPoolInfo
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekCodeArrtibute
</UL>

<P><STRONG><a name="[40]"></a>getStringFromOperandStack</STRONG> (Thumb, 114 bytes, Stack size 64 bytes, ravem.o(i.getStringFromOperandStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = getStringFromOperandStack &rArr; seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekConstClassNumString
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokevirtual_callFunction
</UL>

<P><STRONG><a name="[41]"></a>hardware_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, device_depend.o(i.hardware_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = hardware_init &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_systick
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>invokespecial_callFunction</STRONG> (Thumb, 132 bytes, Stack size 72 bytes, ravem.o(i.invokespecial_callFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = invokespecial_callFunction &rArr; seekNameAndType_name &rArr; seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekNameAndType_name
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekNameAndType_desc
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
</UL>

<P><STRONG><a name="[37]"></a>invokestatic_callFunction</STRONG> (Thumb, 236 bytes, Stack size 136 bytes, ravem.o(i.invokestatic_callFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = invokestatic_callFunction &rArr; getIntegerFromOperandStack &rArr; seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setIntegerToStack
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekNameAndType_name
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_millis
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_write
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIntegerFromOperandStack
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
</UL>

<P><STRONG><a name="[36]"></a>invokevirtual_callFunction</STRONG> (Thumb, 244 bytes, Stack size 136 bytes, ravem.o(i.invokevirtual_callFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = invokevirtual_callFunction &rArr; getStringFromOperandStack &rArr; seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setIntegerToStack
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekNameAndType_name
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getStringFromOperandStack
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_read
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
</UL>

<P><STRONG><a name="[1a]"></a>main</STRONG> (Thumb, 1422 bytes, Stack size 112 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = main &rArr; decodeVM &rArr; getField &rArr; seekNameAndType_desc &rArr; seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekCodeArrtibute
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pool_realloc
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pool_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pool_free
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pool_alloc
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIntegerFromOperandStack
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[4a]"></a>pool_alloc</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, pool.o(i.pool_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pool_alloc &rArr; uart_print &rArr; UARTSend
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putField
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pool_realloc
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>pool_free</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pool.o(i.pool_free))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>pool_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, pool.o(i.pool_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pool_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>pool_realloc</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, pool.o(i.pool_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pool_realloc &rArr; pool_alloc &rArr; uart_print &rArr; UARTSend
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pool_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putField
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>port_write</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, device_depend.o(i.port_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = port_write
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetDir
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetBitValue
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokestatic_callFunction
</UL>

<P><STRONG><a name="[35]"></a>putField</STRONG> (Thumb, 220 bytes, Stack size 80 bytes, ravem.o(i.putField))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = putField &rArr; getIntegerFromOperandStack &rArr; seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekNameAndType_desc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pool_realloc
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pool_alloc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIntegerFromOperandStack
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
</UL>

<P><STRONG><a name="[4b]"></a>seekCodeArrtibute</STRONG> (Thumb, 564 bytes, Stack size 96 bytes, ravem.o(i.seekCodeArrtibute))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = seekCodeArrtibute &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLengthOfConstantInfo
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getConstantPoolInfo
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_seek
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>seekConstClassNumString</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, ravem.o(i.seekConstClassNumString))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getConstantPoolInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekNameAndType_name
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekNameAndType_desc
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getStringFromOperandStack
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIntegerFromOperandStack
</UL>

<P><STRONG><a name="[3b]"></a>seekNameAndType_desc</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, ravem.o(i.seekNameAndType_desc))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = seekNameAndType_desc &rArr; seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekConstClassNumString
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getConstantPoolInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putField
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokespecial_callFunction
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getField
</UL>

<P><STRONG><a name="[44]"></a>seekNameAndType_name</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, ravem.o(i.seekNameAndType_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = seekNameAndType_name &rArr; seekConstClassNumString &rArr; getConstantPoolInfo &rArr; getLengthOfConstantInfo &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekConstClassNumString
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getConstantPoolInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokevirtual_callFunction
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokestatic_callFunction
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokespecial_callFunction
</UL>

<P><STRONG><a name="[32]"></a>setIntegerToStack</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, ravem.o(i.setIntegerToStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = setIntegerToStack
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokevirtual_callFunction
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokestatic_callFunction
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getField
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
</UL>

<P><STRONG><a name="[31]"></a>setStackFromConstantPool</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, ravem.o(i.setStackFromConstantPool))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = setStackFromConstantPool
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeVM
</UL>

<P><STRONG><a name="[42]"></a>setup_systick</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, device_depend.o(i.setup_systick))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = setup_systick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[45]"></a>time_millis</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, device_depend.o(i.time_millis))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokestatic_callFunction
</UL>

<P><STRONG><a name="[48]"></a>uart_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, device_depend.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uart_init &rArr; UARTInit &rArr; UARTClock_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>uart_print</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, device_depend.o(i.uart_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_print &rArr; UARTSend
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokevirtual_callFunction
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getField
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pool_alloc
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>uart_read</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, device_depend.o(i.uart_read))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invokevirtual_callFunction
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[27]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lpc8xx_uart.o(i.NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTClock_Init
</UL>

<P><STRONG><a name="[29]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lpc8xx_uart.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
</UL>

<P><STRONG><a name="[50]"></a>SysTick_Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, device_depend.o(i.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_systick
</UL>

<P><STRONG><a name="[2b]"></a>_printf_core</STRONG> (Thumb, 452 bytes, Stack size 88 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>

<P><STRONG><a name="[1d]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf3.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0sprintf$3)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
